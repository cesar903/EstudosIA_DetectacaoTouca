Explicação do código de detecção de touca/capacete

import cv2
from ultralytics import YOLO

1. Importações
- Importa a biblioteca OpenCV (cv2) para captura e manipulação de vídeo/imagem.
- Importa a classe YOLO da biblioteca ultralytics para carregar e usar modelos de detecção.

2. Carregamento do modelo
model = YOLO("weights/helmet.pt")
- Cria um objeto modelo carregando o arquivo de pesos do modelo treinado (helmet.pt).
- Esse arquivo deve estar na pasta weights do projeto.

3. Mapeamento das classes
class_map = {
    0: "Com Touca",
    1: "Sem Touca"
}
- Dicionário que associa o ID da classe (0 ou 1) a um texto amigável para exibir.

4. Captura de vídeo
cap = cv2.VideoCapture(0)
- Inicializa a captura da webcam padrão (índice 0).

5. Loop principal
while True:
    ret, frame = cap.read()
    if not ret:
        break
- Loop infinito que lê frame a frame da webcam.
- Se a leitura falhar, o loop encerra.

6. Inferência
results = model(frame)
- Envia o frame capturado para o modelo para detectar toucas.

7. Preparação para anotação
annotated_frame = frame.copy()
- Cria uma cópia do frame para desenhar caixas e textos sem modificar o original.

8. Processamento das detecções
if results[0].boxes:
    for box in results[0].boxes:
        cls_id = int(box.cls[0])
        conf = float(box.conf[0])
        x1, y1, x2, y2 = map(int, box.xyxy[0])
- Verifica se há alguma detecção.
- Para cada caixa detectada, obtém o ID da classe, confiança e coordenadas.

9. Monta o texto e define cor
label = f"{class_map.get(cls_id, 'Desconhecido')} {conf:.2f}"
color = (0, 255, 0) if cls_id == 0 else (0, 0, 255)
- Define o texto com o nome da classe e a confiança.
- Define a cor verde para "Com Touca" e vermelha para "Sem Touca".

10. Desenha na imagem
cv2.rectangle(annotated_frame, (x1, y1), (x2, y2), color, 2)
cv2.putText(annotated_frame, label, (x1, y1 - 10),
            cv2.FONT_HERSHEY_SIMPLEX, 0.7, color, 2)
- Desenha a caixa em volta do objeto detectado.
- Escreve o texto acima da caixa.

11. Caso não haja detecção
else:
    cv2.putText(annotated_frame, "Nenhum operador detectado", (30, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 255), 2)
- Se nenhuma touca ou operador for detectado, exibe essa mensagem no canto.

12. Exibe o frame
cv2.imshow("Detecção de Capacete", annotated_frame)
- Mostra a janela com o vídeo anotado.

13. Condição de saída
if cv2.waitKey(1) & 0xFF == ord("q"):
    break
- Espera pela tecla 'q' para sair do loop.

14. Liberação dos recursos
cap.release()
cv2.destroyAllWindows()
- Libera a webcam e fecha a janela ao terminar.

Resumo:
- Captura vídeo da webcam.
- Detecta em tempo real se operadores estão com ou sem touca.
- Desenha caixas e texto colorido conforme a detecção.
- Exibe tudo em uma janela até o usuário encerrar com 'q'.

---

Se quiser, posso ajudar a adicionar alertas sonoros, salvar fotos das detecções, ou preparar a documentação para seu TCC.

